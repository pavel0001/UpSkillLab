1.Дайте определение массиву. Как осуществляется индексация элементов массива. Как необходимо обращаться к i-му элементу массива?
Массив это такая структура данных которая имеет определённый тип (в массиве типа int могут храниться только int),
и содержит в  себе некоторое колличество ячеек (размер массива) где в каждой ячейке хранятся данные. У каждой ячейки есть её порядковый номер
который называется индекс, с помощью которого можно получить доступ к данной ячейке. Нумерация ячеек в массиве начинается с 0. Т.е. если размер
массива = 10 то первый элемент будет array[0], а последний array[9].

2.Приведите способы объявления и инициализации одномерных и двумерных массивов примитивных и ссылочных типов. Укажите разницу, между массивами примитивных и ссылочных типов.
Одномерные и двумерные массивы объявляются схожим образом - int[] example_name = new int[i]; i - размер массива. Размер необходимо указывать при
объявлении т.к. в java массивы не изменяемые. Двумерный массив объявляется практически так же - int[][] example_name = new int[i][n];
В общем представлении двумерный массив это матрица, на подобии тамблицы где есть строки и столбцы, а доступ к ячейке можно получить
указав её строку и столбец. Исходя из этого i - кол-во строк, n - кол-во столбцов.
Инициализироваться массивы могут сразу же при их объявлении - String[] tmp = {"Hello","World","!"}; - будет создан массив с 3 элементами.
Либо после объявления, с помощью индекса ячейки можно задать её значение. String[] tmp = new String[3];  tmp[0] = "Hello";
Массив ссылочных типов в ячейках хранят ссылки, а примитивных - примитивы.

3.Объясните, что значит клонирование массива, как в Java можно клонировать массив, в чем состоит разница в клонировании массивов примитивных и ссылочных типов.
Клонировать массив можно используя метод clone() : char[] first = {'H','e','l','l','o'};  char[] secend = first.clone(); - теперь 
массив secend  будет содержать такие же элементы как и first. Так же в классе Arrays есть методы для копирования одного массива в другой, с возможностью
увеличения длинны итогового массива. 
Разница клонирования примитивных и ссылочных массивов состоит в том что при клонировании массива примитивов клонируются значения ячеек и 
эти клоны присваиваются ячейкам нового массива, когда мы клонируем массив ссылочных типов то объекты на которые ссылался клонируемый массив
клонируются и их ссылки присваиваются ячейкам нового массива.

4.Объясните, что представляет собой двумерных массив в Java, что такое “рваный массив”. Как узнать количество строк и количество элементов в каждой строке для “рваного” массива?
Двумерный массив это матрица, где в основе лежит одномерный массив, в каждой ячейке которого лежит другой массив. Рваный массив - скорее всего
это массив в котором массивы второго порядка содержат разное количество ячеек. Что бы узнать количество строк массива - 
int[][] example = {{1,2,3},{4,5},{6,7,8,9,10,11}};  Колличество строк - example.length; (int)
"длина" n-й строки - example[n].length;  

5.Объясните ситуации, когда в java-коде могут возникнуть следующие исключительные ситуации java.lang.ArrayIndexOutOfBoundsException и java.lang.ArrayStoreException.
ArrayIndexOutOfBoundsException типичная exception которая выбрасывает когда мы пытаемся обратиться к несуществующей ячейке массива.
ArrayStoreException - когда мы пытаемся запихнуть в массив значение не правильного типа (например в массив целых чисел int запихнуть string)

6.Объясните, зачем при кодировании разделять решаемую задачу на методы. Поясните, как вы понимаете выражение: “Один метод не должен выполнять две задачи”.
Разделение решения задачи на несколько методов способствует лучшей "читаемости" кода, снижает затраты на поддержку такого кода,
а так же способствует большей инкапсуляции. “Один метод не должен выполнять две задачи” - я понимаю это как не нужно в один метод впихивать много логики,
иначе потом если кто-то кроме автора или даже сам автор спустя некоторое время захотят в этом разобраться что бы что-то исправить или усовершенствовать
это будет очень проблематично.

7.Объясните, как в Java передаются параметры в методы, в чем особенность передачи в метод значения примитивного типа, а в чем ссылочного.
При передаче примитивного типа в метод мы передаём его скопированное значение, сам примитивный тип при этом не изменяется, а в методе появляется
его точная копия с которой происходят манипуляции. При передаче ссылочного типа, мы передаём копию ссылки на объект в метод, где эта ссылка присваивается
ссылочной переменной.

8.Объясните, как в метод передать массив. И как массив вернуть из метода. Можно ли в методе изменить размер переданного массива.
Что бы передать массив в метод, нужно в самом методе в качествее принимаемых параметров указать тип массива и вызвать метод передав туда массив.
Что бы его оттуда вернуть нужно в качестве возвращаемого параметра в объявлении метода указать тип массива.
Размер массива изменить нельзя, можно его удалить, создать новый массив другой длинны и туда поместить значения из первого массива.

9.Поясните, что означает выражение ‘вернуть значение из метода’. Как можно вернуть значение из метода. Есть ли разница при возврате значений примитивного и ссылочного типов.
Значение из метода возвращается с помощью ключевого слова return, после которого указывается то что мы хотим вернуть, это может быть 
логическое, арифметическое выражение, примитивы, объекты. Возвращаемый тип должен быть указан в объявлении метода.

10.Перечислите известные вам алгоритмы сортировки значений, приведите код, реализующий это алгоритмы.
Пузырьковая сортировка:
int[] example = {924,2,8,34,123,897,23,123,65,2};
	    
for(int i = 0; i < example.length; i++){
    
	for(int x =0; x<example.length-1;x++){
	    
    	if(example[x] > example[x+1]){
        	int tmp = example[x+1];
        	example[x+1] = example[x];
        	example[x] = tmp;
    	}
}
}
